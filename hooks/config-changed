#!/bin/bash

set -u
hooksdir=$(dirname $0)
template_dir="${hooksdir}/../templates/"
# Allow a custom solr schema to be installed
schema=$(config-get schema)
if [[ -n $schema ]]; then
    juju-log "Setting up new solr schema"
    base64 -d <<<"$schema" > /etc/solr/conf/schema.xml
fi

# Set the number of Jetty threads dedicated to accepting incoming connections. 
acceptors=$(config-get acceptors)
if [[ -z $acceptors ]]; then
    acceptors=100
fi
juju-log "Setting acceptors to $acceptors"
sed -e "s/!ACCEPTORS!/$acceptors/" $template_dir/jetty.xml.template > /etc/jetty/jetty.xml

# Configure JVM
max_heap=$(config-get java-max-heap-mb)
min_heap=$(config-get java-min-heap-mb)
if [[ -z $max_heap ]]; then
    system_memory_in_mb=$(free -m | awk '/Mem:/ {print $2}')
    half_system_memory_in_mb=$(expr $system_memory_in_mb / 2)
    # Set max for jvm heap size as garbage collection can get expensive if the heap is too large 
    if [[ ${half_system_memory_in_mb} -gt 4096 ]]; then
        max_heap=4096
    else
        max_heap="${half_system_memory_in_mb}"
    fi
fi

# Set min heap equal to max heap. Takes longer to start but all memory is
# allocated up front
if [[ -z $min_heap ]]; then
    min_heap=$max_heap
fi

host_ip=$(unit-get private-address)
juju-log "Setting Java Min heap: $min_heap"
juju-log "Setting Java Max heap: $max_heap"
sed -e "s/!JAVA-MIN-HEAP!/$min_heap/" \
    -e "s/!JAVA-MAX-HEAP!/$max_heap/" \
    -e "s/!HOST-IP!/$host_ip/" \
    $template_dir/jetty-default.template > /etc/default/jetty

/etc/init.d/jetty stop
/etc/init.d/jetty start
# Wait for solr-jetty to start responding
curl_rc=-1
counter=0
while [[ $curl_rc -ne 0 ]]; do
    juju-log "Waiting for solr-jetty to respond ($counter)"
    curl --silent "http://${host_ip}:8080/solr/select?q=test" 2>&1 > /dev/null
    curl_rc=$?
    if [[ $counter -gt 5 ]]; then
        juju-log "solr-jetty not responding"
        exit 1
    fi
    sleep 5
    let counter++
done
open-port 8080/tcp
